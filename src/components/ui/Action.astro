---
import Icon from "@/components/ui/Icon.astro";
import type { HTMLTag, Polymorphic } from "astro/types";

// Define the types for different action buttons
type ActionTypes =
	| "logo"
	| "button1"
	| "button2"
	| "button3"
	| "cardButton"
	| "largeButton"
	| "downButton"
	| "downButtonBlue"
	| "text"
	| "icon"
	| "default";

// Define the props with polymorphic types
type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag; iconName?: string }>;

const { as: Tag, class: className, type, iconName, ...props } = Astro.props;

// Define base button styles
const baseButtonStyle =
	"text-sm md:text-base text-center my-0 transition hover:scale-110 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-secondary-dark opacity-85 hover:brightness-110";

// Define specific styles for each action type
const defaultStyles: Record<ActionTypes, string> = {
	button1: `${baseButtonStyle} py-2.5  px-6 rounded-lg bg-secondary text-white2`,
	button2: `${baseButtonStyle} py-2.5  px-3 rounded-lg bg-transparent text-secondary border border-secondary`,
	button3: `${baseButtonStyle} text-lg px-20 py-3 md:py-3 bg-primary-dark text-white shadow-2xl`,
	cardButton: `${baseButtonStyle} bg-primary text-white w-72 transition-colors duration-300 pricing-card-cta`,
	largeButton: `${baseButtonStyle} py-2.5 bg-secondary border-2 border-dashed border-secondary-light text-white2 px-20 md:px-40`,
	default: "",
	downButton: `${baseButtonStyle} flex justify-center items-center animate-bounce border-2 border-primary-light bg-primary-light text-white rounded-full w-12 h-12 hover:bg-transparent hover:text-primary-light bottom-0 absolute`,
	downButtonBlue: `${baseButtonStyle} flex justify-center items-center animate-bounce border-2 border-dotted hover:border-double border-secondary-light bg-secondary text-white rounded-full w-12 h-12 hover:bg-transparent hover:text-secondary-light opacity-60 bottom-0`,
	icon: "text-white hover:opacity-50 hover:scale-105",
	logo: "text-secondary-dark opacity-80 hover:scale-110 hover:opacity-60 md:text-xs lg:text-sm font-semibold mr-4",
	text: "text-secondary-dark opacity-80 hover:scale-110 hover:opacity-90 items-center font-light md:text-xs lg:text-sm flex items-center",
};

// Determine the base class for the action type
const baseClass = defaultStyles[type as ActionTypes] ?? "";
---

<!-- Render the Tag component with the appropriate class list and props -->
<Tag class:list={[baseClass, className]} {...props}>
	{iconName && <Icon icon={iconName} class="mr-2" />}
	<slot />
</Tag>
