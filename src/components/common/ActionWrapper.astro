---
// src/components/common/ActionWrapper.astro
// This component creates a wrapper for Action components.
import { twMerge } from "tailwind-merge";
import type { HTMLAttributes } from "astro/types";

/**
 * Props interface for the ActionWrapper component.
 * Extends HTMLAttributes<'div'> to allow all standard HTML div attributes.
 */
interface Props extends HTMLAttributes<"div"> {
	/** Flex direction of the wrapper */
	flex?: "flex-row" | "flex-col";
	/** Horizontal alignment of items within the wrapper */
	align?:
		| "justify-start"
		| "justify-center"
		| "justify-end"
		| "justify-between"
		| "justify-around"
		| "justify-evenly";
	/** Vertical alignment of items within the wrapper */
	verticalAlign?:
		| "items-start"
		| "items-center"
		| "items-end"
		| "items-baseline"
		| "items-stretch";
	/** Gap between items in the wrapper */
	gap?: "gap-4" | "gap-6" | "gap-8" | "gap-x-2 md:gap-x-8" | "gap-4 sm:gap-6";
	/** Margin applied to the wrapper */
	margin?:
		| ""
		| "ml-4"
		| "mb-8"
		| "mt-4"
		| "mt-6"
		| "mt-8"
		| "mb-6"
		| "mb-12"
		| "my-16"
		| "mt-12"
		| "mt-24";
	/** Whether to wrap items or not */
	wrap?: boolean;
	/** Whether the wrapper should take up full width */
	fullWidth?: boolean;
	/** CSS position property for the wrapper */
	position?: "relative" | "absolute" | "fixed" | "sticky";
}

// Destructure props with default values
const {
	flex = "flex-row",
	align = "justify-center",
	verticalAlign = "items-center",
	gap = "gap-4",
	margin = "mt-4",
	wrap = false,
	fullWidth = false,
	position,
	class: className,
	...rest
} = Astro.props;

// Combine classes using twMerge to avoid conflicts and keep classes clean
const wrapperClasses = twMerge(
	"flex",
	flex,
	align,
	verticalAlign,
	gap,
	margin,
	wrap ? "flex-wrap" : "flex-nowrap",
	fullWidth ? "w-full" : "",
	position,
	className,
);
---

<div class={wrapperClasses} {...rest}>
	<slot />
</div>
