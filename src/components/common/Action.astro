---
import Icon from "@/components/common/Icon.astro";
import { twMerge } from 'tailwind-merge';
import type { HTMLAttributes } from 'astro/types';
import type { Icon as IconType } from "@/config/landing.interface";

// Define the possible variants for the Action component
type ActionVariant = 'primary' | 'secondary' | 'tertiary' | 'text' | 'icon' | 'scroll' | 'logo' | 'large';

// Extend HTML anchor attributes with our custom props
interface Props extends HTMLAttributes<'a'> {
  variant?: ActionVariant;
  icon?: string;
}

const { variant = 'primary', icon, class: className, ...rest } = Astro.props;

// Base styles applied to all Action variants
const baseStyles = "inline-flex items-center justify-center transition-all duration-600 text-sm md:text-base hover:shadow-2xl text-nowrap";

// Styles specific to each Action variant
const variantStyles: Record<ActionVariant, string> = {
  primary: "py-2.5 px-6 rounded-lg bg-secondary text-white2 hover:scale-110 hover:brightness-110",
  secondary: "py-2.5 px-3 rounded-lg bg-transparent text-secondary border border-secondary hover:scale-110 hover:brightness-110",
  tertiary: "text-lg px-14 py-3 bg-primary-dark text-white shadow-2xl hover:scale-110 hover:brightness-110",
  text: "opacity-80 hover:scale-110 hover:opacity-90 font-light md:text-xs lg:text-sm flex items-center",
  icon: "text-white hover:opacity-50 hover:scale-105",
  scroll: "flex justify-center items-center animate-bounce border-2 border-primary bg-primary-light text-white rounded-full w-12 h-12 hover:bg-primary opacity-50 hover:opacity-100 hover:bg-inherit bottom-0 absolute",
  logo: "text-secondary-dark opacity-80 hover:scale-110 hover:opacity-60 md:text-xs lg:text-sm font-semibold mr-4",
  large: "py-2.5 bg-secondary border-2 border-dashed border-secondary-light text-white2 px-20 md:px-40 hover:scale-110 hover:brightness-110",
};

// Merge base styles, variant styles, and any custom classes
// tailwind-merge ensures no conflicts between Tailwind classes
const classes = twMerge(baseStyles, variantStyles[variant], className);
---

<!-- Render the Action component -->
<a class={classes} {...rest}>
  {icon && <Icon icon={icon as IconType} class="mr-2" />}
  <slot />
</a>
