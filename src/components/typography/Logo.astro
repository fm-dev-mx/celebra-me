---
import { twMerge } from "tailwind-merge";
import type { HTMLAttributes } from "astro/types";
import Icon from "@/components/common/Icon.astro";
import IconWrapper from "@/components/common/IconWrapper.astro";
import type { Icon as IconType } from "@/config/landing.interface";

interface Props extends HTMLAttributes<"div"> {
	// Container properties
	as?: keyof HTMLElementTagNameMap;
	containerFlex?: string;
	containerGap?: string;
	containerMargin?: string;
	containerPadding?: string;
	containerAlign?: string;
	containerAnimation?: string;

	// Text properties
	textSize?: string;
	fontWeight?: string;
	textColor?: string;
	textClasses?: string;
	textAnimation?: string;

	// Icon properties
	iconSize?: string;
	icon?: IconType;
	iconMargin?: string;
	iconAlign?: string;
	iconBackground?: string;
	iconPrimaryColor?: string;
	iconSecondaryColor?: string;
	iconAnimation?: string;
	iconClasses?: string;

	// Domain text properties
	domainTextStyles?: string;
}

const {
	// Container properties
	as: Element = "div",
	containerFlex = "flex-col sm:flex-row",
	containerGap = "gap-0 sm:gap-4",
	containerMargin = "mx-auto mb-4",
	containerPadding = "px-4 sm:px-8",
	containerAlign = "items-center justify-center",
	containerAnimation = "",

	// Text properties
	textSize = "text-3xl sm:text-4xl md:text-5xl lg:text-5xl",
	fontWeight = "font-semibold",
	textColor = "text-accent-dark",
	textClasses = "shadow-text-dark",
	textAnimation = "",

	// Icon properties
	iconMargin = "mx-auto mr-0 sm:mr-4 sm:mb-4 md:mt-0 lg:mt-0 xl:mt-2",
	iconAlign = "items-center",
	iconBackground = "bg-transparent",
	icon = "FavIcon",
	iconSize = "w-full",
	iconPrimaryColor = "var(--accent-default)",
	iconSecondaryColor = "var(--secondary-light)",
	iconAnimation = "permanent-glow-favicon",
	iconClasses = "",

	// Domain text properties
	domainTextStyles = "flex-row sm:flex-col scale-75 sm:scale-[70%] pt-0 sm:pt-5 md:pt-6 lg:pt-7 xl:pt-8 font-normal",

	...rest
} = Astro.props;

const containerStyles = twMerge(
	"flex",
	containerFlex,
	containerGap,
	containerMargin,
	containerPadding,
	containerAlign,
	containerAnimation,
);

const iconWrapperStyles = twMerge(
	"flex w-full",
	iconAlign,
	iconMargin,
	iconBackground,
	iconAnimation,
	iconClasses,
);
const textStyles = twMerge(textSize, fontWeight, textColor, textClasses);

const logoTextStyles = twMerge(
	"flex flex-row sm:flex-col shrink text-nowrap scale-125 mx-0 sm:mx-8",
	textStyles,
);

const comStyles = twMerge(domainTextStyles, textStyles);
---

<Element class={containerStyles} {...rest}>
	<div class={`flex ${containerFlex} ${containerAlign} ${containerGap}`}>
		<IconWrapper class={iconWrapperStyles}>
			<Icon
				icon={icon}
				size={iconSize}
				primaryColor={iconPrimaryColor}
				secondaryColor={iconSecondaryColor}
				class="opacity-90"
			/>
		</IconWrapper>

		<div class={`flex flex-col sm:flex-row items-center ${textSize}`}>
			<div class={`${logoTextStyles} ${textAnimation} celebra-me`}>celebra-me</div>
			<div class={`${comStyles}`}>.com</div>
		</div>
	</div>
</Element>
