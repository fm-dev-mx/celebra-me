---
import { twMerge } from "tailwind-merge";

/**
 * Section.astro
 * A flexible container for various sections of the website, with customizable background, layout, and sizing options.
 */

// Define the props interface for the Section component
interface Props {
	id?: string; // Optional ID for the section
	backgroundImageMobile?: string; // Background image for mobile devices
	backgroundImageDesktop?: string; // Background image for desktop devices
	backgroundColor?: string; // Background color of the section
	backgroundEffect?: string; // Optional overlay effect class
	padding?: string; // Padding for the section
	margin?: string; // Margin around the section
	relative?: string; // Whether the section should be positioned relative
	fullHeight?: boolean; // Whether the section takes the full height of the viewport
	fullWidth?: boolean; // Whether the section takes the full width of the viewport
	overflow?: string; // Control the overflow property of the section
}

// Destructure props with default values for flexibility
const {
	id = "",
	backgroundImageMobile = "",
	backgroundImageDesktop = "",
	backgroundColor = "",
	backgroundEffect = "",
	padding = "px-4 py-10 pt-40",
	margin = "mx-auto",
	relative = "relative",
	fullHeight = false,
	fullWidth = false,
	overflow = "overflow-hidden",
} = Astro.props;

// Define constant classes for consistent layout
const LAYOUT_CLASSES = "flex flex-col items-center justify-center"; // Changed 'place-content-center' to 'justify-center' for consistency
const BACKGROUND_CLASSES = "bg-center bg-no-repeat";

// Determine height and width based on fullHeight and fullWidth props
const height = fullHeight ? "min-h-screen" : "h-auto";
const width = fullWidth ? "w-full" : "w-5/6 md:w-3/4";

// Combine all classes for the section
const sectionClasses = twMerge(
	LAYOUT_CLASSES,
	BACKGROUND_CLASSES,
	margin,
	width,
	padding,
	relative,
	height,
	backgroundColor,
	overflow,
);
---

<!-- Main section container with dynamic classes -->
<section id={id} class:list={sectionClasses}>
	{/* Mobile background image */}
	{
		backgroundImageMobile && (
			<div
				class="absolute inset-0 z-[-1] bg-center bg-no-repeat bg-cover lg:hidden"
				style={`background-image: url('${backgroundImageMobile}');`}
			>
				{/* Optional background effect */}
				<div class={backgroundEffect} />
			</div>
		)
	}

	{/* Desktop background image */}
	{
		backgroundImageDesktop && (
			<div
				class="absolute inset-0 z-[-1] bg-center bg-no-repeat bg-cover hidden lg:block"
				style={`background-image: url('${backgroundImageDesktop}');`}
			>
				{/* Optional background effect */}
				<div class={backgroundEffect} />
			</div>
		)
	}

	{/* Slot for section content */}
	<slot />
</section>
